from typing import List
from datetime import datetime

# DEFINE SOLUTION IN HERE
class Solution:
    def maximumCandies(self, candies: List[int], k: int) -> int:
        total = sum(candies)
        
        if total < k:
            return 0
        elif total == k:
            return 1
        
        candies.sort()
        max_size = 0
        
        for i in range(len(candies)): 
            for j in range(min(candies[i], total // k), max_size, -1): # pile size
                # count n candies
                n = 0
                found = False
                
                for h in range(i, len(candies)): # count n candies with size j
                    n += candies[h] // j
                    
                    if n >= k:
                        found = True
                        break
                
                if found:
                    if j > max_size:
                        max_size = j
                    break
                
            total -= candies[i]
        return max_size

if __name__ == '__main__':
    solution = Solution()

    # DEFINE PARAMETERS IN HERE

    start = datetime.now()
    # RUN MAIN FUNCTION IN HERE
    # candies = [803,916,798,653,808,1251,1263,870,1288,1171,1483,1108,697,1280,985,610,509,804,908,731,1010,1498,1353,1268,867,1137,1054,1218,656,569,1314,949,502,1115,926,597,1348,669,975,1393,526,1286,500,661,577,933,1102,611,680,956,1389,720,1020,976,1011,1282,1417,814,690,1270,562,1099,1445,1125,856,1198,1256,505,524,728,604,1028,737,979,1373,806,1201,1417,1029,880,727,530,780,1189,869,1309,1478,1141,1239,829,1166,554,1030,1221,1149,1014,688,1173,679,721,768,541,1496,943,1059,1448,1344,1334,560,1086,860,615,573,941,1080,1376,677,1043,770,972,1336,533,1078,614,1032,1322,926,1258,1341,1045,851,1273,644,1080,1257,1494,906,573,1105,665,1438,863,1128,854,608,744,1310,898,1173,1038,1073,1235,799,1058,1420,1403,912,769,838,1446,900,974,920,547,1393,1234,720,1443,848,817,664,975,804,1117,1386,1081,599,1024,569,741,1280,919,1107,1354,1012,1064,1451,728,991,680,1051,978,1244,526,1180,1074,624,1460,1244,884,1097,787,900,620,805,1484,712,950,1278,1078,834,926,979,1114,1248,555,644,1223,1106,620,1162,638,637,977,1044,1063,1430,874,998,901,1248,1389,517,1453,556,1027,1012,1338,583,1002,1181,1088,955,1214,833,1436,1142,870,796,1092,654,611,1401,990,1418,1371,1002,1366,850,1335,1445,1367,525,1331,1313,1341,916,1483,1040,1012,565,505,775,632,1168,687,757,1471,520,1064,1367,767,545,1372,989,1129,649,557,930,979,1344,936,603,572,1451,847,844,1431,1315,1011,1483,1147,1173,1394,513,629,1054,1358,1411,815,1204,1242,1347,952,1058,1261,754,1082,659,546,1059,1026,649,803,1081,1416,1240,534,928,1358,1085,790,518,969,1021,862,638,902,977,551,657,1429,1374,800,812,811,1076,1106,529,773,706,1350,1122,1063,1183,1276,1322,873,706,532,1464,555,1157,1033,1142,552,1308,1052,1424,559,1062,1018,1104,1431,635,920,586,509,688,611,1088,1252,1118,1112,903,1365,982,510,1000,522,864,1378,528,1173,1381,889,680,747,1478,640,1099,778,888,811,545,1438,848,1288,982,526,557,526,652,678,612,991,938,1073,1249,967,989,655,826,1104,1250,755,1232,502,518,1376,1409,1003,1255,1407,1487,1079,900,1253,1335,773,993,547,1416,652,1217,1205,555,1376,1275,688,1478,1068,1369,1268,1435,887,1230,1016,937,820,703,1228,1363,951,846,1463,640,860,845,509,780,1484,1088,1381,1497,772,733,1049,1244,966,1166,1259,1175,638,645,847,524,1479,777,870,1239,717,1214,824,1485,1341,1309,1416,544,1229,1310,1197,594,1381,860,590,1010,1334,930,1155,571,661,524,989,1391,1136,529,973,698,930,1025,853,1266,778,793,667,1000,1048,598,642,1382,578,682,683,1306,976,1356,985,527,1402,1039,583,1308,928,1014,1454,885,1358,1445,1008,885,1029,1229,869,657,555,684,1457,1409,832,790,1373,1164,916,1478,1499,1260,891,1034,565,696,1478,916,1380,749,746,1301,827,1471,1450,1015,896,1068,1325,1123,655,1150,633,848,1062,1150,1261,816,1285,809,845,651,849,1271,792,1328,549,731,1123,1341,1444,1256,565,765,1286,773,804,1462,677,1321,870,861,1219,542,1096,650,988,1231,559,1413,803,721,725,1252,1158,886,1336,1417,1252,1064,626,845,1095,518,943,820,1088,1026,995,1151,655,1033,1218,790,1011,1100,849,1169,1072,952,817,1097,911,1038,767,610,1072,1017,649,1499,661,714,970,1066,785,1001,880,735,1171,1185,1113,910,1115,1254,990,1340,827,1221,754,1177,1467,903,1131,1210,727,1199,518,562,1490,1002,1146,828,1235,1336,1364,981,1223,888,1090,1499,539,1110,1163,1407,1317,941,1116,1447,1195,991,1460,1373,1102,722,816,1020,1361,844,1168,524,573,1077,542,1272,1046,1054,874,786,1031,986,1482,646,1429,1208,906,1352,1121,1493,1068,1121,1224,1337,564,1206,596,1055,704,721,1432,628,748,1394,944,1488,934,709,1369,1120,1041,554,941,658,930,711,705,1394,728,1197,1082,529,892,1201,1429,1197,1412,800,1015,1319,1410,1264,841,795,1104,1159,802,698,644,749,1208,1456,1327,573,979,642,1048,1058,1387,1407,774,1301,787,621,1046,872,1015,890,504,1281,703,596,1310,1368,1471,1222,575,792,591,1009,1448,1299,1178,1100,1078,1154,877,758,931,1264,1059,883,870,1394,1222,1276,1466,1327,696,1451,1452,546,1303,1053,1190,1420,1075,1357,1026,768,1075,1351,1062,896,1449,1390,684,1484,644,606,1029,1466,621,731,615,671,1283,1303,1128,1129,1353,1254,806,890,1490,1267,962,1203,999,839,732,1102,916,987,1063,790,1225,1313,1401,756,663,528,1409,1203,681,1058,1078,854,727,1179,985,1298,691,566,930,774,762,1231,829,892,869,621,537,1241,816,1211,563,909,1403,893,533,861,607,1026,527,773,755,1472,1220,529,1022,830,1487,1159,763,1260,1322,1251,723,734,1321,638,535,902,811,798,1291,779,643,597,1102,854,892,1270,733,501,690,788,603,1287,1371,583,1389,1160,694,1167,878,572,875,802,944,1434,1106,1486,806,1158,823,1232,1384,955,1259,1423,801,1455,855,1338,616,785,1121,1289,1191,1395,1140,1197,723,1215,1299]
    # k = 892

    candies = [705,1309,864,567,767,1027,1453,958,1187,593,1309,765,1045,716,602,850,1132,665,1470,1260,674,1496,1025,989,966,1277,1335,1407,854,716,760,630,552,1050,603,585,1092,825,539,1050,829,913,899,1480,1210,1188,1081,1397,831,1447,897,1073,1197,880,658,1273,1245,1297,1437,1055,532,1444,1227,1312,1261,1377,1426,1423,1055,1162,1043,1148,732,1166,565,1005,713,856,1192,705,935,1012,1352,594,897,1141,1065,1313,1421,1471,1109,571,1179,1213,1154,1175,1202,971,1015,639,618,1034,559,1279,1404,967,1403,880,1476,786,706,1489,1147,1443,1414,597,1204,841,751,848,507,970,1274,534,1276,1328,602,1096,879,1019,527,1123,801,1441,573,917,1338,698,1317,1047,899,742,1415,1110,644,1380,881,1234,1163,556,1296,585,1446,992,642,783,814,710,1205,1287,1066,1476,580,970,1201,1186,1113,1246,1135,530,944,1034,601,1049,1194,1070,1375,815,1124,510,741,1057,602,863,668,1032,660,1079,1154,772,1067,1055,1094,1266,1470,741,522,541,565,528,944,1198,999,1421,1123,922,1291,1246,550,1414,597,1014,1186,1427,668,735,1402,1069,1433,994,1232,1307,974,707,565,1418,620,892,1123,1267,981,542,1203,1221,524,1301,945,1421,528,1423,901,1283,934,1455,823,1333,677,800,1073,1023,1396,879,577,1435,653,1476,626,537,1060,1149,710,941,1314,800,907,1179,514,761,1056,1439,638,798,1019,814,858,1095,635,596,950,577,1116,1098,1140,639,1198,768,701,1373,880,1326,1205,649,827,1196,889,1344,1067,560,1321,754,1291,743,715,1310,1021,1199,1468,687,726,903,977,1218,529,940,1394,1067,603,1073,1430,1313,727,828,1381,702,1411,613,949,1274,510,1447,903,684,708,941,506,749,1370,1047,692,1486,1078,802,1041,1239,1198,529,1203,1135,1349,537,949,1200,944,1247,1049,1451,678,1237,1058,1259,975,509,1305,1272,852,577,581,1142,741,594,1489,1342,735,831,1040,1243,1246,1059,838,1468,523,749,1490,1222,746,1227,1310,798,676,1056,746,914,1248,716,995,1477,1376,903,1090,1050,964,572,1056,859,516,878,645,819,521,779,824,1244,961,1388,776,950,813,1008,1150,914,1069,1253,1500,934,881,986,787,515,1372,1033,1244,1484,1088,1312,777,1031,1281,1191,567,535,1032,597,1373,517,1312,741,1211,788,1021,825,1214,999,1078,1322,1113,1290,625,1432,1105,990,1297,935,1371,519,1401,1026,577,715,676,555,1298,1073,1380,716,1113,945,718,625,835,710,909,1046,1166,700,1048,880,702,1297,752,1299,1025,1367,844,942,617,779,924,759,829,1158,875,1240,578,609,1328,945,1205,904,1161,1126,633,1474,590,1359,630,610,684,750,773,1487,1223,734,581,1317,819,1010,884,584,550,698,719,1073,1085,588,572,1343,1193,1154,1431,586,715,1053,1025,1052,1400,1096,1453,1424,1355,723,982,1112,861,911,1296,615,1061,1103,1204,1408,928,743,737,797,1023,951,1178,1316,1424,660,764,1268,1279,609,638,1253,1306,1449,1374,1316,931,664,1405,1434,850,1022,845,1199,590,524,1449,724,648,524,1130,1093,974,1193,1279,1460,1346,1284,689,1297,1000,906,818,1075,913,1027,700,652,991,651,1042,942,905,825,849,1119,1429,1021,546,690,968,1400,1131,589,1027,1002,1131,1331,1069,1218,952,1178,548,1454,653,1391,1314,1411,733,1415,1415,527,896,572,652,615,1354,1435,1066,1447,977,676,618,1338,517,522,866,1465,677,1463,984,861,564,789,1340,859,974,1405,622,1438,760,822,1181,714,1355,1296,1059,1112,500,889,647,1053,1212,965,1031,790,836,855,1197,1490,1137,1413,754,716,1113,941,976,1095,1210,975,500,1387,512,573,1475,531,798,687,824,1203,1216,811,624,1237,1481,849,797,886,1295,1334,1235,915,1248,1198,1077,1475,768,1050,803,956,607,1380,983,801,1375,1118,509,1480,816,1351,846,1023,1310,845,812,1147,1392,1102,814,823,1083,856,564,1486,555,1268,1114,829,984,763,861,548,1451,1107,666,565,1100,1388,1095,1236,976,1127,1147,684,531,937,850,1365,679,588,989,1454,1325,845,1165,1450,622,755,827,743,593,885,1128,1023,591,782,1258,932,1345,1297,1002,1287,1055,692,1420,1142,574,1268,1407,971,557,1456,682,1059,1384,1085,1438,996,1002,1305,736,954,959,1376,1400,1061,1295,1097,729,1399,849,1219,1245,1132,703,1201,820,1067,826,1132,1253,687,1179,1406,877,628,675,700,944,1087,1490,969,911,730,678,919,540,1110,755,1243,1357,698,850,527,708,1448,1153,504,1328,970,1344,1350,1329,902,580,597,1098,1045,559,1338,708,799,1011,1216,1322,991,941,1070,597,619,1331,1148,1071,840,1278,1072,843,806,816,832,1358,851,1281,703,1438,615,1011,1242,1317,919,1473,844,702,1189,1151,956,905,582,1446,1139,511,1473,790,908,1413,660,875,892,1239,828,833,1177,1418,1182,1340,1153,764,920,680,1041,594,894,586,1233,1207,1148,1266,1122,534,937,1197,627,917,1130,1319,952,1208,1344,1367,880,665,1290,1273,945,1419,610,899,555,549,1383,1051,1427,801,537,781,1098,869,728,1015,617,1137,880,1499,712,1153,728,846,1472,815,1330,1032,1332,1191,922,880,804]
    k = 966

    # candies = [5,6,4,10,10,1,1,2,2,2]
    # k = 9

    ans = solution.maximumCandies(candies, k)

    end = datetime.now()

    print(ans)
    print('\nRuntime:', (end-start))